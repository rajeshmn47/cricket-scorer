generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Match {
  id                String      @id @default(auto()) @map("_id") @db.ObjectId
  userId            String
  name              String
  overs             Int
  curTeam           Int
  allowSinglePlayer Boolean     @default(false)
  strikeIndex       Int         @default(0)
  hasEnded          Boolean     @default(false)
  curPlayers        CurPlayer[]
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  ballEvents        BallEvent[]
  matchTeams        MatchTeam[]

  @@map("matches")
}

model Player {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  userId      String
  name        String
  image       String?
  desc        String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  teamId      String?      @db.ObjectId
  teamPlayers TeamPlayer[]

  @@map("players")
}

model Team {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  userId      String
  name        String
  captain     String?      @db.ObjectId
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  matchId     String?      @db.ObjectId
  matchTeams  MatchTeam[]
  teamPlayers TeamPlayer[]

  @@map("teams")
}

model TeamPlayer {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  team     Team   @relation(fields: [teamId], references: [id])
  teamId   String @db.ObjectId
  player   Player @relation(fields: [playerId], references: [id])
  playerId String @db.ObjectId

  @@map("teamPlayers")
}

model MatchTeam {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  team    Team   @relation(fields: [teamId], references: [id])
  teamId  String @db.ObjectId
  match   Match  @relation(fields: [matchId], references: [id])
  matchId String @db.ObjectId

  @@map("matchTeams")
}

model BallEvent {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  batsmanId String   @db.ObjectId
  bowlerId  String   @db.ObjectId
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Match     Match?   @relation(fields: [matchId], references: [id])
  matchId   String?  @db.ObjectId

  @@map("ballEvents")
}

type CurPlayer {
  id   String     @db.ObjectId
  type PlayerType
}

enum PlayerType {
  batsman
  bowler
}
